{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.getEventNodeFromPoint = getEventNodeFromPoint;\nexports.isEvent = isEvent;\nexports.objectsCollide = objectsCollide;\nexports.getBoundsForNode = getBoundsForNode;\nexports.default = void 0;\n\nvar _contains = _interopRequireDefault(require(\"dom-helpers/query/contains\"));\n\nvar _closest = _interopRequireDefault(require(\"dom-helpers/query/closest\"));\n\nvar _events = _interopRequireDefault(require(\"dom-helpers/events\"));\n\nfunction addEventListener(type, handler, target) {\n  if (target === void 0) {\n    target = document;\n  }\n\n  _events.default.on(target, type, handler, {\n    passive: false\n  });\n\n  return {\n    remove: function remove() {\n      _events.default.off(target, type, handler);\n    }\n  };\n}\n\nfunction isOverContainer(container, x, y) {\n  return !container || (0, _contains.default)(container, document.elementFromPoint(x, y));\n}\n\nfunction getEventNodeFromPoint(node, _ref) {\n  var clientX = _ref.clientX,\n      clientY = _ref.clientY;\n  var target = document.elementFromPoint(clientX, clientY);\n  return (0, _closest.default)(target, '.rbc-event', node);\n}\n\nfunction isEvent(node, bounds) {\n  return !!getEventNodeFromPoint(node, bounds);\n}\n\nfunction getEventCoordinates(e) {\n  var target = e;\n\n  if (e.touches && e.touches.length) {\n    target = e.touches[0];\n  }\n\n  return {\n    clientX: target.clientX,\n    clientY: target.clientY,\n    pageX: target.pageX,\n    pageY: target.pageY\n  };\n}\n\nvar clickTolerance = 5;\nvar clickInterval = 250;\n\nvar Selection = /*#__PURE__*/function () {\n  function Selection(node, _temp) {\n    var _ref2 = _temp === void 0 ? {} : _temp,\n        _ref2$global = _ref2.global,\n        global = _ref2$global === void 0 ? false : _ref2$global,\n        _ref2$longPressThresh = _ref2.longPressThreshold,\n        longPressThreshold = _ref2$longPressThresh === void 0 ? 250 : _ref2$longPressThresh;\n\n    this.container = node;\n    this.globalMouse = !node || global;\n    this.longPressThreshold = longPressThreshold;\n    this._listeners = Object.create(null);\n    this._handleInitialEvent = this._handleInitialEvent.bind(this);\n    this._handleMoveEvent = this._handleMoveEvent.bind(this);\n    this._handleTerminatingEvent = this._handleTerminatingEvent.bind(this);\n    this._keyListener = this._keyListener.bind(this); // Fixes an iOS 10 bug where scrolling could not be prevented on the window.\n    // https://github.com/metafizzy/flickity/issues/457#issuecomment-254501356\n\n    this._onTouchMoveWindowListener = addEventListener('touchmove', function () {}, window);\n    this._onKeyDownListener = addEventListener('keydown', this._keyListener);\n    this._onKeyUpListener = addEventListener('keyup', this._keyListener);\n\n    this._addInitialEventListener();\n  }\n\n  var _proto = Selection.prototype;\n\n  _proto.on = function on(type, handler) {\n    var handlers = this._listeners[type] || (this._listeners[type] = []);\n    handlers.push(handler);\n    return {\n      remove: function remove() {\n        var idx = handlers.indexOf(handler);\n        if (idx !== -1) handlers.splice(idx, 1);\n      }\n    };\n  };\n\n  _proto.emit = function emit(type) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var result;\n    var handlers = this._listeners[type] || [];\n    handlers.forEach(function (fn) {\n      if (result === undefined) result = fn.apply(void 0, args);\n    });\n    return result;\n  };\n\n  _proto.teardown = function teardown() {\n    this.listeners = Object.create(null);\n    this._onTouchMoveWindowListener && this._onTouchMoveWindowListener.remove();\n    this._onInitialEventListener && this._onInitialEventListener.remove();\n    this._onEndListener && this._onEndListener.remove();\n    this._onEscListener && this._onEscListener.remove();\n    this._onMoveListener && this._onMoveListener.remove();\n    this._onKeyUpListener && this._onKeyUpListener.remove();\n    this._onKeyDownListener && this._onKeyDownListener.remove();\n  };\n\n  _proto.isSelected = function isSelected(node) {\n    var box = this._selectRect;\n    if (!box || !this.selecting) return false;\n    return objectsCollide(box, getBoundsForNode(node));\n  };\n\n  _proto.filter = function filter(items) {\n    var box = this._selectRect; //not selecting\n\n    if (!box || !this.selecting) return [];\n    return items.filter(this.isSelected, this);\n  }; // Adds a listener that will call the handler only after the user has pressed on the screen\n  // without moving their finger for 250ms.\n\n\n  _proto._addLongPressListener = function _addLongPressListener(handler, initialEvent) {\n    var _this = this;\n\n    var timer = null;\n    var touchMoveListener = null;\n    var touchEndListener = null;\n\n    var handleTouchStart = function handleTouchStart(initialEvent) {\n      timer = setTimeout(function () {\n        cleanup();\n        handler(initialEvent);\n      }, _this.longPressThreshold);\n      touchMoveListener = addEventListener('touchmove', function () {\n        return cleanup();\n      });\n      touchEndListener = addEventListener('touchend', function () {\n        return cleanup();\n      });\n    };\n\n    var touchStartListener = addEventListener('touchstart', handleTouchStart);\n\n    var cleanup = function cleanup() {\n      if (timer) {\n        clearTimeout(timer);\n      }\n\n      if (touchMoveListener) {\n        touchMoveListener.remove();\n      }\n\n      if (touchEndListener) {\n        touchEndListener.remove();\n      }\n\n      timer = null;\n      touchMoveListener = null;\n      touchEndListener = null;\n    };\n\n    if (initialEvent) {\n      handleTouchStart(initialEvent);\n    }\n\n    return {\n      remove: function remove() {\n        cleanup();\n        touchStartListener.remove();\n      }\n    };\n  }; // Listen for mousedown and touchstart events. When one is received, disable the other and setup\n  // future event handling based on the type of event.\n\n\n  _proto._addInitialEventListener = function _addInitialEventListener() {\n    var _this2 = this;\n\n    var mouseDownListener = addEventListener('mousedown', function (e) {\n      _this2._onInitialEventListener.remove();\n\n      _this2._handleInitialEvent(e);\n\n      _this2._onInitialEventListener = addEventListener('mousedown', _this2._handleInitialEvent);\n    });\n    var touchStartListener = addEventListener('touchstart', function (e) {\n      _this2._onInitialEventListener.remove();\n\n      _this2._onInitialEventListener = _this2._addLongPressListener(_this2._handleInitialEvent, e);\n    });\n    this._onInitialEventListener = {\n      remove: function remove() {\n        mouseDownListener.remove();\n        touchStartListener.remove();\n      }\n    };\n  };\n\n  _proto._handleInitialEvent = function _handleInitialEvent(e) {\n    var _getEventCoordinates = getEventCoordinates(e),\n        clientX = _getEventCoordinates.clientX,\n        clientY = _getEventCoordinates.clientY,\n        pageX = _getEventCoordinates.pageX,\n        pageY = _getEventCoordinates.pageY;\n\n    var node = this.container(),\n        collides,\n        offsetData; // Right clicks\n\n    if (e.which === 3 || e.button === 2 || !isOverContainer(node, clientX, clientY)) return;\n\n    if (!this.globalMouse && node && !(0, _contains.default)(node, e.target)) {\n      var _normalizeDistance = normalizeDistance(0),\n          top = _normalizeDistance.top,\n          left = _normalizeDistance.left,\n          bottom = _normalizeDistance.bottom,\n          right = _normalizeDistance.right;\n\n      offsetData = getBoundsForNode(node);\n      collides = objectsCollide({\n        top: offsetData.top - top,\n        left: offsetData.left - left,\n        bottom: offsetData.bottom + bottom,\n        right: offsetData.right + right\n      }, {\n        top: pageY,\n        left: pageX\n      });\n      if (!collides) return;\n    }\n\n    var result = this.emit('beforeSelect', this._initialEventData = {\n      isTouch: /^touch/.test(e.type),\n      x: pageX,\n      y: pageY,\n      clientX: clientX,\n      clientY: clientY\n    });\n    if (result === false) return;\n\n    switch (e.type) {\n      case 'mousedown':\n        this._onEndListener = addEventListener('mouseup', this._handleTerminatingEvent);\n        this._onEscListener = addEventListener('keydown', this._handleTerminatingEvent);\n        this._onMoveListener = addEventListener('mousemove', this._handleMoveEvent);\n        break;\n\n      case 'touchstart':\n        this._handleMoveEvent(e);\n\n        this._onEndListener = addEventListener('touchend', this._handleTerminatingEvent);\n        this._onMoveListener = addEventListener('touchmove', this._handleMoveEvent);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  _proto._handleTerminatingEvent = function _handleTerminatingEvent(e) {\n    var _getEventCoordinates2 = getEventCoordinates(e),\n        pageX = _getEventCoordinates2.pageX,\n        pageY = _getEventCoordinates2.pageY;\n\n    this.selecting = false;\n    this._onEndListener && this._onEndListener.remove();\n    this._onMoveListener && this._onMoveListener.remove();\n    if (!this._initialEventData) return;\n    var inRoot = !this.container || (0, _contains.default)(this.container(), e.target);\n    var bounds = this._selectRect;\n    var click = this.isClick(pageX, pageY);\n    this._initialEventData = null;\n\n    if (e.key === 'Escape') {\n      return this.emit('reset');\n    }\n\n    if (!inRoot) {\n      return this.emit('reset');\n    }\n\n    if (click && inRoot) {\n      return this._handleClickEvent(e);\n    } // User drag-clicked in the Selectable area\n\n\n    if (!click) return this.emit('select', bounds);\n  };\n\n  _proto._handleClickEvent = function _handleClickEvent(e) {\n    var _getEventCoordinates3 = getEventCoordinates(e),\n        pageX = _getEventCoordinates3.pageX,\n        pageY = _getEventCoordinates3.pageY,\n        clientX = _getEventCoordinates3.clientX,\n        clientY = _getEventCoordinates3.clientY;\n\n    var now = new Date().getTime();\n\n    if (this._lastClickData && now - this._lastClickData.timestamp < clickInterval) {\n      // Double click event\n      this._lastClickData = null;\n      return this.emit('doubleClick', {\n        x: pageX,\n        y: pageY,\n        clientX: clientX,\n        clientY: clientY\n      });\n    } // Click event\n\n\n    this._lastClickData = {\n      timestamp: now\n    };\n    return this.emit('click', {\n      x: pageX,\n      y: pageY,\n      clientX: clientX,\n      clientY: clientY\n    });\n  };\n\n  _proto._handleMoveEvent = function _handleMoveEvent(e) {\n    if (this._initialEventData === null) {\n      return;\n    }\n\n    var _this$_initialEventDa = this._initialEventData,\n        x = _this$_initialEventDa.x,\n        y = _this$_initialEventDa.y;\n\n    var _getEventCoordinates4 = getEventCoordinates(e),\n        pageX = _getEventCoordinates4.pageX,\n        pageY = _getEventCoordinates4.pageY;\n\n    var w = Math.abs(x - pageX);\n    var h = Math.abs(y - pageY);\n    var left = Math.min(pageX, x),\n        top = Math.min(pageY, y),\n        old = this.selecting; // Prevent emitting selectStart event until mouse is moved.\n    // in Chrome on Windows, mouseMove event may be fired just after mouseDown event.\n\n    if (this.isClick(pageX, pageY) && !old && !(w || h)) {\n      return;\n    }\n\n    this.selecting = true;\n    this._selectRect = {\n      top: top,\n      left: left,\n      x: pageX,\n      y: pageY,\n      right: left + w,\n      bottom: top + h\n    };\n\n    if (!old) {\n      this.emit('selectStart', this._initialEventData);\n    }\n\n    if (!this.isClick(pageX, pageY)) this.emit('selecting', this._selectRect);\n    e.preventDefault();\n  };\n\n  _proto._keyListener = function _keyListener(e) {\n    this.ctrl = e.metaKey || e.ctrlKey;\n  };\n\n  _proto.isClick = function isClick(pageX, pageY) {\n    var _this$_initialEventDa2 = this._initialEventData,\n        x = _this$_initialEventDa2.x,\n        y = _this$_initialEventDa2.y,\n        isTouch = _this$_initialEventDa2.isTouch;\n    return !isTouch && Math.abs(pageX - x) <= clickTolerance && Math.abs(pageY - y) <= clickTolerance;\n  };\n\n  return Selection;\n}();\n/**\n * Resolve the disance prop from either an Int or an Object\n * @return {Object}\n */\n\n\nfunction normalizeDistance(distance) {\n  if (distance === void 0) {\n    distance = 0;\n  }\n\n  if (typeof distance !== 'object') distance = {\n    top: distance,\n    left: distance,\n    right: distance,\n    bottom: distance\n  };\n  return distance;\n}\n/**\n * Given two objects containing \"top\", \"left\", \"offsetWidth\" and \"offsetHeight\"\n * properties, determine if they collide.\n * @param  {Object|HTMLElement} a\n * @param  {Object|HTMLElement} b\n * @return {bool}\n */\n\n\nfunction objectsCollide(nodeA, nodeB, tolerance) {\n  if (tolerance === void 0) {\n    tolerance = 0;\n  }\n\n  var _getBoundsForNode = getBoundsForNode(nodeA),\n      aTop = _getBoundsForNode.top,\n      aLeft = _getBoundsForNode.left,\n      _getBoundsForNode$rig = _getBoundsForNode.right,\n      aRight = _getBoundsForNode$rig === void 0 ? aLeft : _getBoundsForNode$rig,\n      _getBoundsForNode$bot = _getBoundsForNode.bottom,\n      aBottom = _getBoundsForNode$bot === void 0 ? aTop : _getBoundsForNode$bot;\n\n  var _getBoundsForNode2 = getBoundsForNode(nodeB),\n      bTop = _getBoundsForNode2.top,\n      bLeft = _getBoundsForNode2.left,\n      _getBoundsForNode2$ri = _getBoundsForNode2.right,\n      bRight = _getBoundsForNode2$ri === void 0 ? bLeft : _getBoundsForNode2$ri,\n      _getBoundsForNode2$bo = _getBoundsForNode2.bottom,\n      bBottom = _getBoundsForNode2$bo === void 0 ? bTop : _getBoundsForNode2$bo;\n\n  return !( // 'a' bottom doesn't touch 'b' top\n  aBottom - tolerance < bTop || // 'a' top doesn't touch 'b' bottom\n  aTop + tolerance > bBottom || // 'a' right doesn't touch 'b' left\n  aRight - tolerance < bLeft || // 'a' left doesn't touch 'b' right\n  aLeft + tolerance > bRight);\n}\n/**\n * Given a node, get everything needed to calculate its boundaries\n * @param  {HTMLElement} node\n * @return {Object}\n */\n\n\nfunction getBoundsForNode(node) {\n  if (!node.getBoundingClientRect) return node;\n  var rect = node.getBoundingClientRect(),\n      left = rect.left + pageOffset('left'),\n      top = rect.top + pageOffset('top');\n  return {\n    top: top,\n    left: left,\n    right: (node.offsetWidth || 0) + left,\n    bottom: (node.offsetHeight || 0) + top\n  };\n}\n\nfunction pageOffset(dir) {\n  if (dir === 'left') return window.pageXOffset || document.body.scrollLeft || 0;\n  if (dir === 'top') return window.pageYOffset || document.body.scrollTop || 0;\n}\n\nvar _default = Selection;\nexports.default = _default;","map":{"version":3,"sources":["/Users/user/Downloads/myapp/node_modules/react-big-calendar/lib/Selection.js"],"names":["_interopRequireDefault","require","exports","__esModule","getEventNodeFromPoint","isEvent","objectsCollide","getBoundsForNode","default","_contains","_closest","_events","addEventListener","type","handler","target","document","on","passive","remove","off","isOverContainer","container","x","y","elementFromPoint","node","_ref","clientX","clientY","bounds","getEventCoordinates","e","touches","length","pageX","pageY","clickTolerance","clickInterval","Selection","_temp","_ref2","_ref2$global","global","_ref2$longPressThresh","longPressThreshold","globalMouse","_listeners","Object","create","_handleInitialEvent","bind","_handleMoveEvent","_handleTerminatingEvent","_keyListener","_onTouchMoveWindowListener","window","_onKeyDownListener","_onKeyUpListener","_addInitialEventListener","_proto","prototype","handlers","push","idx","indexOf","splice","emit","_len","arguments","args","Array","_key","result","forEach","fn","undefined","apply","teardown","listeners","_onInitialEventListener","_onEndListener","_onEscListener","_onMoveListener","isSelected","box","_selectRect","selecting","filter","items","_addLongPressListener","initialEvent","_this","timer","touchMoveListener","touchEndListener","handleTouchStart","setTimeout","cleanup","touchStartListener","clearTimeout","_this2","mouseDownListener","_getEventCoordinates","collides","offsetData","which","button","_normalizeDistance","normalizeDistance","top","left","bottom","right","_initialEventData","isTouch","test","_getEventCoordinates2","inRoot","click","isClick","key","_handleClickEvent","_getEventCoordinates3","now","Date","getTime","_lastClickData","timestamp","_this$_initialEventDa","_getEventCoordinates4","w","Math","abs","h","min","old","preventDefault","ctrl","metaKey","ctrlKey","_this$_initialEventDa2","distance","nodeA","nodeB","tolerance","_getBoundsForNode","aTop","aLeft","_getBoundsForNode$rig","aRight","_getBoundsForNode$bot","aBottom","_getBoundsForNode2","bTop","bLeft","_getBoundsForNode2$ri","bRight","_getBoundsForNode2$bo","bBottom","getBoundingClientRect","rect","pageOffset","offsetWidth","offsetHeight","dir","pageXOffset","body","scrollLeft","pageYOffset","scrollTop","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.getEventNodeFromPoint = getEventNodeFromPoint;\nexports.isEvent = isEvent;\nexports.objectsCollide = objectsCollide;\nexports.getBoundsForNode = getBoundsForNode;\nexports.default = void 0;\n\nvar _contains = _interopRequireDefault(require(\"dom-helpers/query/contains\"));\n\nvar _closest = _interopRequireDefault(require(\"dom-helpers/query/closest\"));\n\nvar _events = _interopRequireDefault(require(\"dom-helpers/events\"));\n\nfunction addEventListener(type, handler, target) {\n  if (target === void 0) {\n    target = document;\n  }\n\n  _events.default.on(target, type, handler, {\n    passive: false\n  });\n\n  return {\n    remove: function remove() {\n      _events.default.off(target, type, handler);\n    }\n  };\n}\n\nfunction isOverContainer(container, x, y) {\n  return !container || (0, _contains.default)(container, document.elementFromPoint(x, y));\n}\n\nfunction getEventNodeFromPoint(node, _ref) {\n  var clientX = _ref.clientX,\n      clientY = _ref.clientY;\n  var target = document.elementFromPoint(clientX, clientY);\n  return (0, _closest.default)(target, '.rbc-event', node);\n}\n\nfunction isEvent(node, bounds) {\n  return !!getEventNodeFromPoint(node, bounds);\n}\n\nfunction getEventCoordinates(e) {\n  var target = e;\n\n  if (e.touches && e.touches.length) {\n    target = e.touches[0];\n  }\n\n  return {\n    clientX: target.clientX,\n    clientY: target.clientY,\n    pageX: target.pageX,\n    pageY: target.pageY\n  };\n}\n\nvar clickTolerance = 5;\nvar clickInterval = 250;\n\nvar Selection =\n/*#__PURE__*/\nfunction () {\n  function Selection(node, _temp) {\n    var _ref2 = _temp === void 0 ? {} : _temp,\n        _ref2$global = _ref2.global,\n        global = _ref2$global === void 0 ? false : _ref2$global,\n        _ref2$longPressThresh = _ref2.longPressThreshold,\n        longPressThreshold = _ref2$longPressThresh === void 0 ? 250 : _ref2$longPressThresh;\n\n    this.container = node;\n    this.globalMouse = !node || global;\n    this.longPressThreshold = longPressThreshold;\n    this._listeners = Object.create(null);\n    this._handleInitialEvent = this._handleInitialEvent.bind(this);\n    this._handleMoveEvent = this._handleMoveEvent.bind(this);\n    this._handleTerminatingEvent = this._handleTerminatingEvent.bind(this);\n    this._keyListener = this._keyListener.bind(this); // Fixes an iOS 10 bug where scrolling could not be prevented on the window.\n    // https://github.com/metafizzy/flickity/issues/457#issuecomment-254501356\n\n    this._onTouchMoveWindowListener = addEventListener('touchmove', function () {}, window);\n    this._onKeyDownListener = addEventListener('keydown', this._keyListener);\n    this._onKeyUpListener = addEventListener('keyup', this._keyListener);\n\n    this._addInitialEventListener();\n  }\n\n  var _proto = Selection.prototype;\n\n  _proto.on = function on(type, handler) {\n    var handlers = this._listeners[type] || (this._listeners[type] = []);\n    handlers.push(handler);\n    return {\n      remove: function remove() {\n        var idx = handlers.indexOf(handler);\n        if (idx !== -1) handlers.splice(idx, 1);\n      }\n    };\n  };\n\n  _proto.emit = function emit(type) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var result;\n    var handlers = this._listeners[type] || [];\n    handlers.forEach(function (fn) {\n      if (result === undefined) result = fn.apply(void 0, args);\n    });\n    return result;\n  };\n\n  _proto.teardown = function teardown() {\n    this.listeners = Object.create(null);\n    this._onTouchMoveWindowListener && this._onTouchMoveWindowListener.remove();\n    this._onInitialEventListener && this._onInitialEventListener.remove();\n    this._onEndListener && this._onEndListener.remove();\n    this._onEscListener && this._onEscListener.remove();\n    this._onMoveListener && this._onMoveListener.remove();\n    this._onKeyUpListener && this._onKeyUpListener.remove();\n    this._onKeyDownListener && this._onKeyDownListener.remove();\n  };\n\n  _proto.isSelected = function isSelected(node) {\n    var box = this._selectRect;\n    if (!box || !this.selecting) return false;\n    return objectsCollide(box, getBoundsForNode(node));\n  };\n\n  _proto.filter = function filter(items) {\n    var box = this._selectRect; //not selecting\n\n    if (!box || !this.selecting) return [];\n    return items.filter(this.isSelected, this);\n  }; // Adds a listener that will call the handler only after the user has pressed on the screen\n  // without moving their finger for 250ms.\n\n\n  _proto._addLongPressListener = function _addLongPressListener(handler, initialEvent) {\n    var _this = this;\n\n    var timer = null;\n    var touchMoveListener = null;\n    var touchEndListener = null;\n\n    var handleTouchStart = function handleTouchStart(initialEvent) {\n      timer = setTimeout(function () {\n        cleanup();\n        handler(initialEvent);\n      }, _this.longPressThreshold);\n      touchMoveListener = addEventListener('touchmove', function () {\n        return cleanup();\n      });\n      touchEndListener = addEventListener('touchend', function () {\n        return cleanup();\n      });\n    };\n\n    var touchStartListener = addEventListener('touchstart', handleTouchStart);\n\n    var cleanup = function cleanup() {\n      if (timer) {\n        clearTimeout(timer);\n      }\n\n      if (touchMoveListener) {\n        touchMoveListener.remove();\n      }\n\n      if (touchEndListener) {\n        touchEndListener.remove();\n      }\n\n      timer = null;\n      touchMoveListener = null;\n      touchEndListener = null;\n    };\n\n    if (initialEvent) {\n      handleTouchStart(initialEvent);\n    }\n\n    return {\n      remove: function remove() {\n        cleanup();\n        touchStartListener.remove();\n      }\n    };\n  }; // Listen for mousedown and touchstart events. When one is received, disable the other and setup\n  // future event handling based on the type of event.\n\n\n  _proto._addInitialEventListener = function _addInitialEventListener() {\n    var _this2 = this;\n\n    var mouseDownListener = addEventListener('mousedown', function (e) {\n      _this2._onInitialEventListener.remove();\n\n      _this2._handleInitialEvent(e);\n\n      _this2._onInitialEventListener = addEventListener('mousedown', _this2._handleInitialEvent);\n    });\n    var touchStartListener = addEventListener('touchstart', function (e) {\n      _this2._onInitialEventListener.remove();\n\n      _this2._onInitialEventListener = _this2._addLongPressListener(_this2._handleInitialEvent, e);\n    });\n    this._onInitialEventListener = {\n      remove: function remove() {\n        mouseDownListener.remove();\n        touchStartListener.remove();\n      }\n    };\n  };\n\n  _proto._handleInitialEvent = function _handleInitialEvent(e) {\n    var _getEventCoordinates = getEventCoordinates(e),\n        clientX = _getEventCoordinates.clientX,\n        clientY = _getEventCoordinates.clientY,\n        pageX = _getEventCoordinates.pageX,\n        pageY = _getEventCoordinates.pageY;\n\n    var node = this.container(),\n        collides,\n        offsetData; // Right clicks\n\n    if (e.which === 3 || e.button === 2 || !isOverContainer(node, clientX, clientY)) return;\n\n    if (!this.globalMouse && node && !(0, _contains.default)(node, e.target)) {\n      var _normalizeDistance = normalizeDistance(0),\n          top = _normalizeDistance.top,\n          left = _normalizeDistance.left,\n          bottom = _normalizeDistance.bottom,\n          right = _normalizeDistance.right;\n\n      offsetData = getBoundsForNode(node);\n      collides = objectsCollide({\n        top: offsetData.top - top,\n        left: offsetData.left - left,\n        bottom: offsetData.bottom + bottom,\n        right: offsetData.right + right\n      }, {\n        top: pageY,\n        left: pageX\n      });\n      if (!collides) return;\n    }\n\n    var result = this.emit('beforeSelect', this._initialEventData = {\n      isTouch: /^touch/.test(e.type),\n      x: pageX,\n      y: pageY,\n      clientX: clientX,\n      clientY: clientY\n    });\n    if (result === false) return;\n\n    switch (e.type) {\n      case 'mousedown':\n        this._onEndListener = addEventListener('mouseup', this._handleTerminatingEvent);\n        this._onEscListener = addEventListener('keydown', this._handleTerminatingEvent);\n        this._onMoveListener = addEventListener('mousemove', this._handleMoveEvent);\n        break;\n\n      case 'touchstart':\n        this._handleMoveEvent(e);\n\n        this._onEndListener = addEventListener('touchend', this._handleTerminatingEvent);\n        this._onMoveListener = addEventListener('touchmove', this._handleMoveEvent);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  _proto._handleTerminatingEvent = function _handleTerminatingEvent(e) {\n    var _getEventCoordinates2 = getEventCoordinates(e),\n        pageX = _getEventCoordinates2.pageX,\n        pageY = _getEventCoordinates2.pageY;\n\n    this.selecting = false;\n    this._onEndListener && this._onEndListener.remove();\n    this._onMoveListener && this._onMoveListener.remove();\n    if (!this._initialEventData) return;\n    var inRoot = !this.container || (0, _contains.default)(this.container(), e.target);\n    var bounds = this._selectRect;\n    var click = this.isClick(pageX, pageY);\n    this._initialEventData = null;\n\n    if (e.key === 'Escape') {\n      return this.emit('reset');\n    }\n\n    if (!inRoot) {\n      return this.emit('reset');\n    }\n\n    if (click && inRoot) {\n      return this._handleClickEvent(e);\n    } // User drag-clicked in the Selectable area\n\n\n    if (!click) return this.emit('select', bounds);\n  };\n\n  _proto._handleClickEvent = function _handleClickEvent(e) {\n    var _getEventCoordinates3 = getEventCoordinates(e),\n        pageX = _getEventCoordinates3.pageX,\n        pageY = _getEventCoordinates3.pageY,\n        clientX = _getEventCoordinates3.clientX,\n        clientY = _getEventCoordinates3.clientY;\n\n    var now = new Date().getTime();\n\n    if (this._lastClickData && now - this._lastClickData.timestamp < clickInterval) {\n      // Double click event\n      this._lastClickData = null;\n      return this.emit('doubleClick', {\n        x: pageX,\n        y: pageY,\n        clientX: clientX,\n        clientY: clientY\n      });\n    } // Click event\n\n\n    this._lastClickData = {\n      timestamp: now\n    };\n    return this.emit('click', {\n      x: pageX,\n      y: pageY,\n      clientX: clientX,\n      clientY: clientY\n    });\n  };\n\n  _proto._handleMoveEvent = function _handleMoveEvent(e) {\n    if (this._initialEventData === null) {\n      return;\n    }\n\n    var _this$_initialEventDa = this._initialEventData,\n        x = _this$_initialEventDa.x,\n        y = _this$_initialEventDa.y;\n\n    var _getEventCoordinates4 = getEventCoordinates(e),\n        pageX = _getEventCoordinates4.pageX,\n        pageY = _getEventCoordinates4.pageY;\n\n    var w = Math.abs(x - pageX);\n    var h = Math.abs(y - pageY);\n    var left = Math.min(pageX, x),\n        top = Math.min(pageY, y),\n        old = this.selecting; // Prevent emitting selectStart event until mouse is moved.\n    // in Chrome on Windows, mouseMove event may be fired just after mouseDown event.\n\n    if (this.isClick(pageX, pageY) && !old && !(w || h)) {\n      return;\n    }\n\n    this.selecting = true;\n    this._selectRect = {\n      top: top,\n      left: left,\n      x: pageX,\n      y: pageY,\n      right: left + w,\n      bottom: top + h\n    };\n\n    if (!old) {\n      this.emit('selectStart', this._initialEventData);\n    }\n\n    if (!this.isClick(pageX, pageY)) this.emit('selecting', this._selectRect);\n    e.preventDefault();\n  };\n\n  _proto._keyListener = function _keyListener(e) {\n    this.ctrl = e.metaKey || e.ctrlKey;\n  };\n\n  _proto.isClick = function isClick(pageX, pageY) {\n    var _this$_initialEventDa2 = this._initialEventData,\n        x = _this$_initialEventDa2.x,\n        y = _this$_initialEventDa2.y,\n        isTouch = _this$_initialEventDa2.isTouch;\n    return !isTouch && Math.abs(pageX - x) <= clickTolerance && Math.abs(pageY - y) <= clickTolerance;\n  };\n\n  return Selection;\n}();\n/**\n * Resolve the disance prop from either an Int or an Object\n * @return {Object}\n */\n\n\nfunction normalizeDistance(distance) {\n  if (distance === void 0) {\n    distance = 0;\n  }\n\n  if (typeof distance !== 'object') distance = {\n    top: distance,\n    left: distance,\n    right: distance,\n    bottom: distance\n  };\n  return distance;\n}\n/**\n * Given two objects containing \"top\", \"left\", \"offsetWidth\" and \"offsetHeight\"\n * properties, determine if they collide.\n * @param  {Object|HTMLElement} a\n * @param  {Object|HTMLElement} b\n * @return {bool}\n */\n\n\nfunction objectsCollide(nodeA, nodeB, tolerance) {\n  if (tolerance === void 0) {\n    tolerance = 0;\n  }\n\n  var _getBoundsForNode = getBoundsForNode(nodeA),\n      aTop = _getBoundsForNode.top,\n      aLeft = _getBoundsForNode.left,\n      _getBoundsForNode$rig = _getBoundsForNode.right,\n      aRight = _getBoundsForNode$rig === void 0 ? aLeft : _getBoundsForNode$rig,\n      _getBoundsForNode$bot = _getBoundsForNode.bottom,\n      aBottom = _getBoundsForNode$bot === void 0 ? aTop : _getBoundsForNode$bot;\n\n  var _getBoundsForNode2 = getBoundsForNode(nodeB),\n      bTop = _getBoundsForNode2.top,\n      bLeft = _getBoundsForNode2.left,\n      _getBoundsForNode2$ri = _getBoundsForNode2.right,\n      bRight = _getBoundsForNode2$ri === void 0 ? bLeft : _getBoundsForNode2$ri,\n      _getBoundsForNode2$bo = _getBoundsForNode2.bottom,\n      bBottom = _getBoundsForNode2$bo === void 0 ? bTop : _getBoundsForNode2$bo;\n\n  return !( // 'a' bottom doesn't touch 'b' top\n  aBottom - tolerance < bTop || // 'a' top doesn't touch 'b' bottom\n  aTop + tolerance > bBottom || // 'a' right doesn't touch 'b' left\n  aRight - tolerance < bLeft || // 'a' left doesn't touch 'b' right\n  aLeft + tolerance > bRight);\n}\n/**\n * Given a node, get everything needed to calculate its boundaries\n * @param  {HTMLElement} node\n * @return {Object}\n */\n\n\nfunction getBoundsForNode(node) {\n  if (!node.getBoundingClientRect) return node;\n  var rect = node.getBoundingClientRect(),\n      left = rect.left + pageOffset('left'),\n      top = rect.top + pageOffset('top');\n  return {\n    top: top,\n    left: left,\n    right: (node.offsetWidth || 0) + left,\n    bottom: (node.offsetHeight || 0) + top\n  };\n}\n\nfunction pageOffset(dir) {\n  if (dir === 'left') return window.pageXOffset || document.body.scrollLeft || 0;\n  if (dir === 'top') return window.pageYOffset || document.body.scrollTop || 0;\n}\n\nvar _default = Selection;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}